---
apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    app: kafka-app
spec:
  ports:
  - port: 9092
    name: http
  type: ClusterIP
  selector:
    app: kafka-app
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka-svc
  replicas: 3
  selector:
    matchLabels:
      app: kafka-app
  template:
    metadata:
      labels:
        app: kafka-app
    spec:
      securityContext:
        fsGroup: 0
      containers:
      - name: kafka
        image: docker.io/bitnami/kafka:3.3.1
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 9092
        - containerPort: 9093
        env:
        - name: KAFKA_HEAP_OPTS
          value: '-Xmx1G -Xms1G'
        - name: KAFKA_ENABLE_KRAFT
          value: 'yes'
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: 'MzYyMWNmMGZmZmIzNDA4MT'
        - name: KAFKA_CFG_PROCESS_ROLES
          value: 'broker,controller'
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: 'CONTROLLER'
        - name: ALLOW_PLAINTEXT_LISTENER
          value: 'yes'
        - name: KAFKA_CFG_LISTENERS
          value: 'PLAINTEXT://:9092,CONTROLLER://:9093'
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: '0@kafka-0.kafka-svc:9093,1@kafka-1.kafka-svc:9093,2@kafka-2.kafka-svc:9093'
        command:
        - '/bin/sh'
        - '-c'
        - |
          export KAFKA_CFG_BROKER_ID=${HOSTNAME##*-}
          /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh
        volumeMounts:
        - name: kafka-storage
          mountPath: /bitnami/kafka
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi
