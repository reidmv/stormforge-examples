apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: postgres
  labels:
    app.kubernetes.io/instance: postgres-stormforge-example
    app.kubernetes.io/name: postgres
stringData:
  POSTGRES_DB: "test_db"
  POSTGRES_USER: "test_user"
  POSTGRES_PASSWORD: "test_password"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgres
  labels:
    app.kubernetes.io/instance: postgres-stormforge-example
    app.kubernetes.io/name: postgres
spec:
  selector:
    app.kubernetes.io/instance: postgres-stormforge-example
    app.kubernetes.io/name: postgres
  ports:
  - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
  labels:
    app.kubernetes.io/instance: postgres-stormforge-example
    app.kubernetes.io/name: postgres
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: postgres-stormforge-example
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: postgres-stormforge-example
        app.kubernetes.io/name: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15.0-alpine
        ports:
        - name: postgres
          containerPort: 5432
        envFrom:
        - secretRef:
            name: postgres-secret
        env:
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          limits:
            cpu: 4.0
            memory: 4096M
          requests:
            cpu: 2.0
            memory: 2048M
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - test_user
            - -d
            - test_db
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          initialDelaySeconds: 15
          periodSeconds: 5
          tcpSocket:
            port: 5432
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 70 # postgres user on Alpine
      volumes:
      - name: postgres-storage
        emptyDir: {}
  strategy:
    type: Recreate
